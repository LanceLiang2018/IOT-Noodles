需要实现的重点：
1.鉴权认证机制
2.数据上传和下载
3.设备管理
4.ui设计
5.软件实现
6.设备之间访问
7.在场wifi
8.任务管理

3.设备管理：
(1)账号管理
注册 登录 界面
(2)设备管理
管理界面 添加删除设备 设备的管理

1.鉴权认证：
用户id→token&key（mac）
获取；生命周期（none）

2.数据管理：
只有token+key才能操作数据
数据分类：文本/媒体（文件操作）

5.软件实现：
flask
/upload /download /token /charge /
/beat
统一地址
apache配置
服务器不挂机

6.设备之间访问
设备1→服务器→设备2：返回值
        →服务器→设备1
返回值：数据/超时

7.wifi管理（不做吧）

8.展示功能：
opi语音识别 让esp开灯
流程：
opi生成控制指令上传/charge
然后get /charge

/charge的后台：
加入任务队列
执行任务并且添加响应队列
等待响应队列响应
响应，pop响应队列

esp的响应：
发送心跳，心跳返回有任务
获取任务列表
执行任务
返回任务执行状态
